---
- name: Interfaces DUMMY DUM0 setup
  vyos.vyos.vyos_config:
    lines:
    - set interfaces dummy dum0 address {{ dummy0_ip }}

- name: Enable LLDP service
  vyos.vyos.vyos_config:
    lines:
    - set service lldp interface all
    save: yes  

- name: Setup MTU on CLOS interfaces
  vyos.vyos.vyos_interfaces:
    config:
    - name: "{{ item.interface }}"
      mtu: 1600
    state: replaced  
  with_items: "{{ clos_interfaces }}"

- name: CLOS Interfaces ETH-X setup
  vyos.vyos.vyos_l3_interfaces:
    config:
    - name: "{{ item.interface }}"
      ipv4:
      - address: "{{ item.addr }}/{{ item.mask }}"
    state: replaced  
  with_items: "{{ clos_interfaces }}"

- name: Setup ISIS router
  vyos.vyos.vyos_config:
    lines:
    - set protocols isis net {{ isis_id }}
    - set protocols isis interface {{ item. interface }} bfd
    - set protocols isis interface {{ item. interface }} network point-to-point
    save: yes   
  with_items: "{{ clos_interfaces }}"

- name: Delete prefix list ISIS export
  vyos.vyos.vyos_config:
    lines:
    - delete policy prefix-list EXPORT-ISIS

- name: Setup prefix list ISIS export
  vyos.vyos.vyos_config:
    lines:
    - set policy prefix-list EXPORT-ISIS rule {{ ansible_loop.index }} action 'permit'
    - set policy prefix-list EXPORT-ISIS rule {{ ansible_loop.index }} prefix {{ item.net }}
    save: yes
  loop: "{{ clos_interfaces }}"
  loop_control:
    extended: yes   
#  with_items: "{{ clos_interfaces }}"

- name: Setup route-map ISIS export and redistribute
  vyos.vyos.vyos_config:
    lines:
    - set policy route-map EXPORT-ISIS rule 10 action 'permit'
    - set policy route-map EXPORT-ISIS rule 10 match ip address prefix-list 'EXPORT-ISIS'
    - set protocols isis redistribute ipv4 connected level-2 route-map 'EXPORT-ISIS'
    save: yes

- name: Setup VTEP BGP
  vyos.vyos.vyos_config:
    lines:
    - set protocols bgp local-as '65010'
    - set protocols bgp address-family ipv4-unicast maximum-paths ibgp '4'
    - set protocols bgp address-family ipv4-unicast redistribute connected
    - set protocols bgp address-family l2vpn-evpn advertise-all-vni 
    - set protocols bgp neighbor {{ bgp_peer_addr1 }} peer-group 'evpn'
    - set protocols bgp neighbor {{ bgp_peer_addr2 }} peer-group 'evpn'
    - set protocols bgp parameters log-neighbor-changes
    - set protocols bgp parameters router-id {{ dummy0_ip | ansible.netcommon.ipaddr('address') }}
    - set protocols bgp peer-group evpn address-family ipv4-unicast nexthop-self
    - set protocols bgp peer-group evpn address-family l2vpn-evpn nexthop-self
    - set protocols bgp peer-group evpn remote-as '65010'
    - set protocols bgp peer-group evpn capability dynamic
    save: yes  

- name: Setup VXLAN 
  vyos.vyos.vyos_config:
    lines:
    - set interfaces vxlan vxlan{{ item.vlan_id }} parameters nolearning
    - set interfaces vxlan vxlan{{ item.vlan_id }} port '4789'
    - set interfaces vxlan vxlan{{ item.vlan_id }} source-address {{ dummy0_ip | ansible.netcommon.ipaddr('address') }}
    - set interfaces vxlan vxlan{{ item.vlan_id }} vni {{ item.vni_id }}
    save: yes
  with_items: "{{ vlans_l2vni }}"

- name: Setup Bridge for VLAN "{{ item.vlan_id }}"
  vyos.vyos.vyos_config:
    lines:
    - set interfaces bridge br{{ item.vlan_id }} member interface {{ l2_interface }}
    - set interfaces bridge br{{ item.vlan_id }} member interface vxlan{{ item.vlan_id }}
    save: yes
  with_items: "{{ vlans_l2vni }}"